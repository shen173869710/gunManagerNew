apply plugin: 'com.android.application'
apply from: 'url.gradle'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.auto.di.guan.manager"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'armeabi'
        }
        ndkVersion '22.1.7171670'
    }


    /**
     *  编译不同版本的包
     */
    flavorDimensions "guan_manager"
    productFlavors {
        pro {
            versionName "1.0.0"
            dimension "guan_manager"
            manifestPlaceholders = [
                    PACKAGE_NAME: "com.auto.di.guan.manager",
                    APP_NAME    : "guan_manager_release",
            ]
        }

        uat {
            versionName "1.0.0"
            dimension "guan_manager"
            manifestPlaceholders = [
                    PACKAGE_NAME: "com.auto.di.guan.manager",
                    APP_NAME    : "guan_manager_uat",
            ]
        }
    }

    signingConfigs {
        release {
            storeFile file('manager.jks')
            storePassword "123456"
            keyAlias "key1"
            keyPassword "123456"
        }
        debug {
            storeFile file("manager.jks")
            storePassword "123456"
            keyAlias "key1"
            keyPassword "123456"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    android.applicationVariants.all {
        variant ->
            //打包生成apk
            variant.outputs.all {
                output -> outputFileName = "guan_manager_v" + variant.versionName + "_" + buildType.name + ".apk"
            }
            androidUrl.get(variant.flavorName).each {
                urlBean ->
                    buildConfigField "String", urlBean.key, urlBean.value
            }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }
    }

    dexOptions {
        javaMaxHeapSize "8g"
        preDexLibraries = false
    }

    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


}

dependencies {
    implementation 'com.android.support:multidex:1.0.3'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    /*RxLifecycle基础库*/
    implementation 'com.trello.rxlifecycle3:rxlifecycle:3.1.0'
    implementation 'com.trello.rxlifecycle3:rxlifecycle-components:3.1.0'
    /*网络请求框架*/
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    /*RxJava&RxAndroid*/
    implementation 'io.reactivex.rxjava2:rxjava:2.2.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    /** greendao 相关  **/
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'io.github.yuweiguocn:GreenDaoUpgradeHelper:2.2.1'
    implementation 'net.zetetic:android-database-sqlcipher:4.2.0'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.github.lzyzsd:circleprogress:1.2.1'
    implementation 'com.daimajia.numberprogressbar:library:1.4@aar'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.9.0'
    implementation 'com.github.bumptech.glide:annotations:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    implementation 'com.facebook.stetho:stetho:1.5.0'
    //调试查看同网段数据库
    debugImplementation 'com.amitshekhar.android:debug-db-encrypt:1.0.6'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'
    //Toast组件
    implementation 'me.drakeet.support:toastcompat:1.1.0'
    //引入ButterKnife
    implementation 'com.jakewharton:butterknife:10.0.0'
    annotationProcessor "com.jakewharton:butterknife-compiler:10.0.0"
   // implementation 'com.tencent.bugly:crashreport:latest.release'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
   // implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
    implementation 'com.just.agentweb:agentweb-androidx:4.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    // (必选)
    /** 声网rtm **/
    implementation 'io.agora.rtm:rtm-sdk:1.4.0'
    implementation 'com.orhanobut:logger:2.2.0'
    /***百度地图 implementation files('libs/BaiduLBS_android.jar')**/

    implementation  'com.scwang.smart:refresh-layout-kernel:2.0.3'      //核心必须依赖
    implementation  'com.scwang.smart:refresh-header-classics:2.0.3'    //经典刷新头

    implementation 'com.github.arcadefire:nice-spinner:1.4.4'

    implementation 'com.contrarywind:Android-PickerView:4.1.9'

    implementation 'com.github.tbruyelle:rxpermissions:0.12'
}
